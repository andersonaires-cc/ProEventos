{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventoService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:5001/api/eventos';\n  }\n  getEventos() {\n    return this.http.get(this.baseUrl);\n  }\n  getEventosByTema(tema) {\n    return this.http.get(`{$this.baseUrl}`);\n  }\n  getEventoById() {\n    return this.http.get(this.baseUrl);\n  }\n}\nEventoService.ɵfac = function EventoService_Factory(t) {\n  return new (t || EventoService)(i0.ɵɵinject(i1.HttpClient));\n};\nEventoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EventoService,\n  factory: EventoService.ɵfac\n});","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAe;IAAf,SAAI,GAAJA,IAAI;IAFxB,YAAO,GAAG,oCAAoC;EAEP;EAEvCC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;EAEAC,gBAAgB,CAACC,IAAa;IAC5B,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAW,iBAAiB,CAAC;EACnD;EAEAI,aAAa;IACX,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAW,IAAI,CAACC,OAAO,CAAC;EAC9C;;AAfWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;SAAbA,aAAa;EAAAS,SAAbT,aAAa;AAAA","names":["EventoService","constructor","http","getEventos","get","baseUrl","getEventosByTema","tema","getEventoById","factory"],"sourceRoot":"","sources":["C:\\Users\\catar\\OneDrive\\Área de Trabalho\\Anderson\\PROEVENTOS\\front\\ProEventos-App\\src\\app\\services\\evento.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Evento } from '../models/Evento';\r\n\r\n@Injectable(\r\n    // {providedIn: 'root'}\r\n)\r\nexport class EventoService {\r\n  baseUrl = 'https://localhost:5001/api/eventos';\r\n  \r\n  constructor(private http:HttpClient) { }\r\n\r\n  getEventos(): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(this.baseUrl);\r\n  }\r\n\r\n  getEventosByTema(tema : string): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(`{$this.baseUrl}`);\r\n  }\r\n\r\n  getEventoById(): Observable<Evento[]> {\r\n    return this.http.get<Evento[]>(this.baseUrl);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}